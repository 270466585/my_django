>>> from polls.models import Question, Choice # ????????§Õ???????
    # ????????????questions????
    >>> Question.objects.all()
    <QuerySet []>

    # ??????????question????
    # Django??????timezone.now()????python?????datetime.datetime.now()
    # ???timezone????????Django¦·?????????pytz
    from django.utils import timezone
    >>> q = Question(question_text="What's new?", pub_date=timezone.now())

    # ?????????????save()???????????????›Ô???????
    >>> q.save()

    # ?????????????????????????????id??????
    >>> q.id
    1

    # ???python????????¡Â?????????????¦Å??
    >>> q.question_text
    "What's new?"
    >>> q.pub_date
    datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=<UTC>)

    # ?????????????????¦Å???????????????save???????§Ò??µµ
    >>> q.question_text = "What's up?"
    >>> q.save()

    # objects.all() ??????????????????questions
    >>> Question.objects.all()
    <QuerySet [<Question: Question object>]>
>>> from polls.models import Question, Choice

# ?????__str__()??§¹????????????
>>> Question.objects.all()
<QuerySet [<Question: What's up?>]>

# Django???????????????????API
>>> Question.objects.filter(id=1)
<QuerySet [<Question: What's up?>]>
>>> Question.objects.filter(question_text__startswith='What')
<QuerySet [<Question: What's up?>]>

# ??????????????
>>> from django.utils import timezone
>>> current_year = timezone.now().year
>>> Question.objects.get(pub_date__year=current_year)
<Question: What's up?>

# ?????????????ID????????
>>> Question.objects.get(id=2)
Traceback (most recent call last):
...
DoesNotExist: Question matching query does not exist.

# Django?????????????????§Õ??pk???????????Question.objects.get(id=1)§¹?????.
>>> Question.objects.get(pk=1)
<Question: What's up?>

# ????????????????????????????
>>> q = Question.objects.get(pk=1)
>>> q.was_published_recently()
True

# ?????????????????
>>> q = Question.objects.get(pk=1)

# ?????????q?????§Û????choice??????????????????¦Ê¦É???????
>>> q.choice_set.all()
<QuerySet []>

# ????3??choices.
>>> q.choice_set.create(choice_text='Not much', votes=0)
<Choice: Not much>
>>> q.choice_set.create(choice_text='The sky', votes=0)
<Choice: The sky>
>>> c = q.choice_set.create(choice_text='Just hacking again', votes=0)

# Choice????????API??????????????Question????
>>> c.question
<Question: What's up?>

# ??????Question??????????API?????????Choice????
>>> q.choice_set.all()
<QuerySet [<Choice: Not much>, <Choice: The sky>, <Choice: Just hacking again>]>
>>> q.choice_set.count()
3

# API?????????????????????????????????????????????????????????????????
# ???????????§Ö?Choices???????????Question???????????????????????????current_year?????
>>> Choice.objects.filter(question__pub_date__year=current_year)
<QuerySet [<Choice: Not much>, <Choice: The sky>, <Choice: Just hacking again>]>

# ???delete???????????
>>> c = q.choice_set.filter(choice_text__startswith='Just hacking')
>>> c.delete()